- name: Create the ELB only listening over port 80
  ec2_elb_lb:
    name: "{{ ELB_NAME }}"
    state: present
    region: eu-central-1
    zones:
      - eu-central-1a
      - eu-central-1b
    listeners:
      - protocol: http
        load_balancer_port: 80
        instance_port: 80
  register: elb

- name: Create EC2 Instance
  ec2:
    key_name: UdacityCapstoneProject
    instance_type: t2.nano
    image: ami-0986c2ac728528ac2
    user_data: "{{ USER_DATA }}"
    region: eu-central-1
    group_id:
      - sg-x
      - sg-x
    wait: yes
    instance_tags:
      Name: "{{ INSTANCE_NAME }}"
      application: "{{ application }}"
      exact_count: 2
      count_tag:
        application: "{{ application }}"
  register: ec2_instances
  
- name: Wait for servers to come online
  wait_for:
    host: "{{ item.public_ip }}"
    port: 80
    timeout: 180
  with_items: "{{ ec2_instances.tagged_instances }}"
  ignore_errors: True

- name: Add each EC2 instance to the ELB
  ec2_elb:
    state: present
    ec2_elbs: "{{ ELB_NAME }}"
    region: "{{ item.region }}"
    instance_id: "{{ item.id }}"
  with_items: "{{ ec2_instances.tagged_instances }}"
    

#- name: Install Nginx
#  apt:
#    name: nginx
#    state: present
#  when: ansible_facts['os_family'] == 'Debian'
#
#- name: generate Nginx site config
#  template:
#      src: site.conf.j2
#      dest: /etc/nginx/sites-enabled/site.conf
#      owner: root
#      group: root
#      mode: 0744
#
#- name: Generate index.html
#  template:
#      src: index.html
#      dest: /var/www/html/index.html
#      owner: root
#      group: root
#      mode: 0744
#
#- name: Enable Nginx service
#  systemd:
#    name: nginx
#    daemon_reload: yes
#    enabled: yes
#    state: started